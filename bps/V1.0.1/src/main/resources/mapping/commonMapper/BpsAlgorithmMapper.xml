<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
******************************************************************************
* 数据库表：BPS_ALGORITHM
* 表的名称：算法表
* 对应实体：com.vilio.bps.commonMapper.pojo.BpsAlgorithm
* 开发日期：2017-06-12
* 技术服务：www.fwjava.com
******************************************************************************
-->
<mapper namespace="com.vilio.bps.commonMapper.dao.IBpsAlgorithmMapper">

    <!--
    **************************************************************************
    * 1.新增一条数据
    * 注: 根据Bean实体执行新增操作.
    **************************************************************************
    -->
    <insert id="getInsert"
            parameterType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm">
    
            INSERT   /* getInsert+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
              INTO   BPS_ALGORITHM             /* 算法表 */ 
                    (
                     ID                        /* 数据主键 */ 
                    ,CODE                      /*  */ 
                    ,NAME                      /* 算法名称 */ 
                    ,DESCRIPTION               /* 算法描述 */ 
                    ,STATUS                    /* 状态(1可用，0不可用) */ 
                    ,DATE_CREATED              /* 数据创建时间 */ 
                    ,DATE_MODIFIED             /* 数据修改时间 */ 
                    )
            VALUES  (
                     #{id}                     /* 数据主键 */ 
                    ,#{code}                   /*  */ 
                    ,#{name}                   /* 算法名称 */ 
                    ,#{description}            /* 算法描述 */ 
                    ,#{status}                 /* 状态(1可用，0不可用) */ 
                    ,#{dateCreated}            /* 数据创建时间 */ 
                    ,#{dateModified}           /* 数据修改时间 */ 
                    )
         
    </insert>
    
    <insert id="getInsertPrmMap"
            parameterType="java.util.HashMap">
    
            INSERT   /* getInsertPrmMap+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
              INTO   BPS_ALGORITHM             /* 算法表 */ 
                    (
                     ID                        /* 数据主键 */ 
                    ,CODE                      /*  */ 
                    ,NAME                      /* 算法名称 */ 
                    ,DESCRIPTION               /* 算法描述 */ 
                    ,STATUS                    /* 状态(1可用，0不可用) */ 
                    ,DATE_CREATED              /* 数据创建时间 */ 
                    ,DATE_MODIFIED             /* 数据修改时间 */ 
                    )
            VALUES  (
                     #{id}                     /* 数据主键 */ 
                    ,#{code}                   /*  */ 
                    ,#{name}                   /* 算法名称 */ 
                    ,#{description}            /* 算法描述 */ 
                    ,#{status}                 /* 状态(1可用，0不可用) */ 
                    ,#{dateCreated}            /* 数据创建时间 */ 
                    ,#{dateModified}           /* 数据修改时间 */ 
                    )
         
    </insert>


    <!--
    **************************************************************************
    * 2.删除一条数据
    * 注: 根据Bean实体的主键ID执行删除操作.
    **************************************************************************
    -->
    <delete id="getDelete"
            parameterType="java.lang.Integer">
    
            DELETE   /* getDelete+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
              FROM   BPS_ALGORITHM         /* 算法表 */ 
             WHERE   ID = #{_parameter}    /* 数据主键 */ 
         
    </delete>


    <!--
    **************************************************************************
    * 3.变更一条数据
    * 注: 根据Bean实体的主键ID执行变更操作.
    **************************************************************************
    -->
    <update id="getUpdate"
            parameterType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm">
    
            UPDATE   /* getUpdate+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     BPS_ALGORITHM                         /* 算法表 */ 
               SET   CODE             = #{code}            /*  */ 
                    ,NAME             = #{name}            /* 算法名称 */ 
                    ,DESCRIPTION      = #{description}     /* 算法描述 */ 
                    ,STATUS           = #{status}          /* 状态(1可用，0不可用) */ 
                    ,DATE_CREATED     = #{dateCreated}     /* 数据创建时间 */ 
                    ,DATE_MODIFIED    = #{dateModified}    /* 数据修改时间 */ 
             WHERE   ID               = #{id}              /* 数据主键 */ 
         
    </update>
    
    <update id="getUpdatePrmMap"
            parameterType="java.util.HashMap">
    
            UPDATE   /* getUpdatePrmMap+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     BPS_ALGORITHM                         /* 算法表 */ 
               SET   CODE             = #{code}            /*  */ 
                    ,NAME             = #{name}            /* 算法名称 */ 
                    ,DESCRIPTION      = #{description}     /* 算法描述 */ 
                    ,STATUS           = #{status}          /* 状态(1可用，0不可用) */ 
                    ,DATE_CREATED     = #{dateCreated}     /* 数据创建时间 */ 
                    ,DATE_MODIFIED    = #{dateModified}    /* 数据修改时间 */ 
             WHERE   ID               = #{id}              /* 数据主键 */ 
         
    </update>


    <!--
    **************************************************************************
    * 4.获取一个Bean实体
    * 注: 根据Bean实体的主键ID获取一个Bean实体.
    **************************************************************************
    -->
    <select id="getBean"
            parameterType="java.lang.Integer"
            resultType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm">
    
            SELECT   /* getBean+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     ba.ID                AS id              /* 数据主键 */ 
                    ,ba.CODE              AS code            /*  */ 
                    ,ba.NAME              AS name            /* 算法名称 */ 
                    ,ba.DESCRIPTION       AS description     /* 算法描述 */ 
                    ,ba.STATUS            AS status          /* 状态(1可用，0不可用) */ 
                    ,ba.DATE_CREATED      AS dateCreated     /* 数据创建时间 */ 
                    ,ba.DATE_MODIFIED     AS dateModified    /* 数据修改时间 */ 
              FROM   BPS_ALGORITHM           ba              /* 算法表 */ 
             WHERE   ba.ID = #{_parameter}                   /* 数据主键 */ 
         
    </select>
    
    <select id="getBeanRtnMap"
            parameterType="java.lang.Integer"
            resultType="java.util.HashMap">
    
            SELECT   /* getBeanRtnMap+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     ba.ID                AS id              /* 数据主键 */ 
                    ,ba.CODE              AS code            /*  */ 
                    ,ba.NAME              AS name            /* 算法名称 */ 
                    ,ba.DESCRIPTION       AS description     /* 算法描述 */ 
                    ,ba.STATUS            AS status          /* 状态(1可用，0不可用) */ 
                    ,ba.DATE_CREATED      AS dateCreated     /* 数据创建时间 */ 
                    ,ba.DATE_MODIFIED     AS dateModified    /* 数据修改时间 */ 
              FROM   BPS_ALGORITHM           ba              /* 算法表 */ 
             WHERE   ba.ID = #{_parameter}                   /* 数据主键 */ 
         
    </select>


    <!--
    **************************************************************************
    * 5.条件查询
    * 注: 支持多条件查询、模糊查询、日期比较查询等操作.
    **************************************************************************
    -->
    <select id="getList"
            parameterType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm"
            resultType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm">
    
            SELECT   /* getList+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     ba.ID                AS id              /* 数据主键 */ 
                    ,ba.CODE              AS code            /*  */ 
                    ,ba.NAME              AS name            /* 算法名称 */ 
                    ,ba.DESCRIPTION       AS description     /* 算法描述 */ 
                    ,ba.STATUS            AS status          /* 状态(1可用，0不可用) */ 
                    ,ba.DATE_CREATED      AS dateCreated     /* 数据创建时间 */ 
                    ,ba.DATE_MODIFIED     AS dateModified    /* 数据修改时间 */ 
              FROM   BPS_ALGORITHM           ba              /* 算法表 */ 
             WHERE   1 = 1
        
             <if test='id != null'>
               AND   ba.ID = #{id} /* 数据主键 */ 
             </if>
        
             <if test='code != null and code != "" and code != "null" and code != "undefined"'>
               AND   ba.CODE = #{code} /*  */ 
             </if>
        
             <if test='name != null and name != "" and name != "null" and name != "undefined"'>
               AND   ba.NAME = #{name} /* 算法名称 */ 
             </if>
        
             <if test='description != null and description != "" and description != "null" and description != "undefined"'>
               AND   ba.DESCRIPTION = #{description} /* 算法描述 */ 
             </if>
        
             <if test='status != null and status != "" and status != "null" and status != "undefined"'>
               AND   ba.STATUS = #{status} /* 状态(1可用，0不可用) */ 
             </if>
        
             <if test='dateCreated != null'>
               AND   date_format(ba.DATE_CREATED ,'%Y-%m-%d') = #{dateCreatedChar} /* 数据创建时间 */ 
             </if>
        
             <if test='dateModified != null'>
               AND   date_format(ba.DATE_MODIFIED ,'%Y-%m-%d') = #{dateModifiedChar} /* 数据修改时间 */ 
             </if>
         
         
         
             <!-- 常用自定义字段 -->
             <!-- /常用自定义字段 -->
         
             <if test='orderBy != null and orderBy != ""'>
               ORDER BY   ${orderBy}  /* 排序 */ 
             </if>
         
    </select>
    
    <select id="getListPrmMapRtnBean"
            parameterType="java.util.HashMap"
            resultType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm">
    
            SELECT   /* getListPrmMapRtnBean+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     ba.ID                AS id              /* 数据主键 */ 
                    ,ba.CODE              AS code            /*  */ 
                    ,ba.NAME              AS name            /* 算法名称 */ 
                    ,ba.DESCRIPTION       AS description     /* 算法描述 */ 
                    ,ba.STATUS            AS status          /* 状态(1可用，0不可用) */ 
                    ,ba.DATE_CREATED      AS dateCreated     /* 数据创建时间 */ 
                    ,ba.DATE_MODIFIED     AS dateModified    /* 数据修改时间 */ 
              FROM   BPS_ALGORITHM           ba              /* 算法表 */ 
             WHERE   1 = 1
        
             <if test='id != null'>
               AND   ba.ID = #{id} /* 数据主键 */ 
             </if>
        
             <if test='code != null and code != "" and code != "null" and code != "undefined"'>
               AND   ba.CODE = #{code} /*  */ 
             </if>
        
             <if test='name != null and name != "" and name != "null" and name != "undefined"'>
               AND   ba.NAME = #{name} /* 算法名称 */ 
             </if>
        
             <if test='description != null and description != "" and description != "null" and description != "undefined"'>
               AND   ba.DESCRIPTION = #{description} /* 算法描述 */ 
             </if>
        
             <if test='status != null and status != "" and status != "null" and status != "undefined"'>
               AND   ba.STATUS = #{status} /* 状态(1可用，0不可用) */ 
             </if>
        
             <if test='dateCreated != null'>
               AND   date_format(ba.DATE_CREATED ,'%Y-%m-%d') = #{dateCreatedChar} /* 数据创建时间 */ 
             </if>
        
             <if test='dateModified != null'>
               AND   date_format(ba.DATE_MODIFIED ,'%Y-%m-%d') = #{dateModifiedChar} /* 数据修改时间 */ 
             </if>
         
         
         
             <!-- 常用自定义字段 -->
             <!-- /常用自定义字段 -->
         
             <if test='orderBy != null and orderBy != ""'>
               ORDER BY   ${orderBy}  /* 排序 */ 
             </if>
         
    </select>
    
    <select id="getListPrmMapRtnMap"
            parameterType="java.util.HashMap"
            resultType="java.util.HashMap">
    
            SELECT   /* getListPrmMapRtnMap+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     ba.ID                AS id              /* 数据主键 */ 
                    ,ba.CODE              AS code            /*  */ 
                    ,ba.NAME              AS name            /* 算法名称 */ 
                    ,ba.DESCRIPTION       AS description     /* 算法描述 */ 
                    ,ba.STATUS            AS status          /* 状态(1可用，0不可用) */ 
                    ,ba.DATE_CREATED      AS dateCreated     /* 数据创建时间 */ 
                    ,ba.DATE_MODIFIED     AS dateModified    /* 数据修改时间 */ 
              FROM   BPS_ALGORITHM           ba              /* 算法表 */ 
             WHERE   1 = 1
        
             <if test='id != null'>
               AND   ba.ID = #{id} /* 数据主键 */ 
             </if>
        
             <if test='code != null and code != "" and code != "null" and code != "undefined"'>
               AND   ba.CODE = #{code} /*  */ 
             </if>
        
             <if test='name != null and name != "" and name != "null" and name != "undefined"'>
               AND   ba.NAME = #{name} /* 算法名称 */ 
             </if>
        
             <if test='description != null and description != "" and description != "null" and description != "undefined"'>
               AND   ba.DESCRIPTION = #{description} /* 算法描述 */ 
             </if>
        
             <if test='status != null and status != "" and status != "null" and status != "undefined"'>
               AND   ba.STATUS = #{status} /* 状态(1可用，0不可用) */ 
             </if>
        
             <if test='dateCreated != null'>
               AND   date_format(ba.DATE_CREATED ,'%Y-%m-%d') = #{dateCreatedChar} /* 数据创建时间 */ 
             </if>
        
             <if test='dateModified != null'>
               AND   date_format(ba.DATE_MODIFIED ,'%Y-%m-%d') = #{dateModifiedChar} /* 数据修改时间 */ 
             </if>
         
         
         
             <!-- 常用自定义字段 -->
             <!-- /常用自定义字段 -->
         
             <if test='orderBy != null and orderBy != ""'>
               ORDER BY   ${orderBy}  /* 排序 */ 
             </if>
         
    </select>


    <!--
    **************************************************************************
    * 6.验证多条件数据是否存在
    * 注: 根据多条件验证该数据是否存在 ,并返回数据量.
    **************************************************************************
    -->
    <select id="getCheckBy"
            parameterType="com.vilio.bps.commonMapper.pojo.BpsAlgorithm"
            resultType="java.lang.Integer">
    
            SELECT   /* getCheckBy+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     count(1)
              FROM   BPS_ALGORITHM  /* 算法表 */ 
             WHERE   1 = 1
        
             <if test='id != null'>
               AND   ID = #{id} /* 数据主键 */ 
             </if>
        
             <if test='code != null and code != "" and code != "null" and code != "undefined"'>
               AND   CODE = #{code} /*  */ 
             </if>
        
             <if test='name != null and name != "" and name != "null" and name != "undefined"'>
               AND   NAME = #{name} /* 算法名称 */ 
             </if>
        
             <if test='description != null and description != "" and description != "null" and description != "undefined"'>
               AND   DESCRIPTION = #{description} /* 算法描述 */ 
             </if>
        
             <if test='status != null and status != "" and status != "null" and status != "undefined"'>
               AND   STATUS = #{status} /* 状态(1可用，0不可用) */ 
             </if>
        
             <if test='dateCreated != null'>
               AND   date_format(DATE_CREATED ,'%Y-%m-%d') = #{dateCreatedChar} /* 数据创建时间 */ 
             </if>
        
             <if test='dateModified != null'>
               AND   date_format(DATE_MODIFIED ,'%Y-%m-%d') = #{dateModifiedChar} /* 数据修改时间 */ 
             </if>
         
         
         
             <!-- 常用自定义字段 -->
             <!-- /常用自定义字段 -->
         
    </select>
    
    <select id="getCheckByPrmMap"
            parameterType="java.util.HashMap"
            resultType="java.lang.Integer">
    
            SELECT   /* getCheckByPrmMap+@com.vilio.bps.commonMapper.sql.BpsAlgorithmMapper.xml */ 
                     count(1)
              FROM   BPS_ALGORITHM  /* 算法表 */ 
             WHERE   1 = 1
        
             <if test='id != null'>
               AND   ID = #{id} /* 数据主键 */ 
             </if>
        
             <if test='code != null and code != "" and code != "null" and code != "undefined"'>
               AND   CODE = #{code} /*  */ 
             </if>
        
             <if test='name != null and name != "" and name != "null" and name != "undefined"'>
               AND   NAME = #{name} /* 算法名称 */ 
             </if>
        
             <if test='description != null and description != "" and description != "null" and description != "undefined"'>
               AND   DESCRIPTION = #{description} /* 算法描述 */ 
             </if>
        
             <if test='status != null and status != "" and status != "null" and status != "undefined"'>
               AND   STATUS = #{status} /* 状态(1可用，0不可用) */ 
             </if>
        
             <if test='dateCreated != null'>
               AND   date_format(DATE_CREATED ,'%Y-%m-%d') = #{dateCreatedChar} /* 数据创建时间 */ 
             </if>
        
             <if test='dateModified != null'>
               AND   date_format(DATE_MODIFIED ,'%Y-%m-%d') = #{dateModifiedChar} /* 数据修改时间 */ 
             </if>
         
         
         
             <!-- 常用自定义字段 -->
             <!-- /常用自定义字段 -->
         
    </select>

    <select id="findAlgorithmByAlgorithmCode" resultType="java.lang.String">
        SELECT
        a.name
        FROM
        bps_algorithm a
        WHERE
        a.code = #{algorithmCode,jdbcType=INTEGER}
    </select>
</mapper>